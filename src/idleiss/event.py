class Event(object):
    """
    Generic events object that is to be executed in sequence inside some
    event queue.
    """

    def __init__(self, func, **kw):
        """
        The default constructor takes a callable function and the
        keyword arguments.  Callable function contains the logic that
        is needed to action the event.

        Should formalize this into some form of action.
        """

        self.func = func
        self.kw = kw

    def __call__(self):
        return self.func(**self.kw)


class GameEngineEvent(Event):
    """
    Events generated by poking at certain methods of the game engine
    that are meant to be consumed by the engine when the world updates.
    """

    def construct_citadel():
        """
        Citadels will function as money generators (mission hubs)
        """
        pass

    def construct_drilling_platform():
        """
        Drilling Platforms will function as basic material generators
        """
        pass

    def construct_industrial_array():
        """
        Industrial Arrays will produce ships and structures
        """
        pass
